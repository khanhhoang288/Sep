#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VideoRental")]
	public partial class VideoRentalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Customer(tbl_Customer instance);
    partial void Updatetbl_Customer(tbl_Customer instance);
    partial void Deletetbl_Customer(tbl_Customer instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    partial void Inserttbl_Disk(tbl_Disk instance);
    partial void Updatetbl_Disk(tbl_Disk instance);
    partial void Deletetbl_Disk(tbl_Disk instance);
    partial void Inserttbl_DiskRental(tbl_DiskRental instance);
    partial void Updatetbl_DiskRental(tbl_DiskRental instance);
    partial void Deletetbl_DiskRental(tbl_DiskRental instance);
    partial void Inserttbl_LateCharge(tbl_LateCharge instance);
    partial void Updatetbl_LateCharge(tbl_LateCharge instance);
    partial void Deletetbl_LateCharge(tbl_LateCharge instance);
    partial void Inserttbl_Rental(tbl_Rental instance);
    partial void Updatetbl_Rental(tbl_Rental instance);
    partial void Deletetbl_Rental(tbl_Rental instance);
    partial void Inserttbl_Reservation(tbl_Reservation instance);
    partial void Updatetbl_Reservation(tbl_Reservation instance);
    partial void Deletetbl_Reservation(tbl_Reservation instance);
    partial void Inserttbl_ReservationTitle(tbl_ReservationTitle instance);
    partial void Updatetbl_ReservationTitle(tbl_ReservationTitle instance);
    partial void Deletetbl_ReservationTitle(tbl_ReservationTitle instance);
    partial void Inserttbl_Return(tbl_Return instance);
    partial void Updatetbl_Return(tbl_Return instance);
    partial void Deletetbl_Return(tbl_Return instance);
    partial void Inserttbl_Title(tbl_Title instance);
    partial void Updatetbl_Title(tbl_Title instance);
    partial void Deletetbl_Title(tbl_Title instance);
    #endregion
		
		public VideoRentalDataContext() : 
				base(global::DAL.Properties.Settings.Default.VideoRentalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VideoRentalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VideoRentalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VideoRentalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VideoRentalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Customer> tbl_Customers
		{
			get
			{
				return this.GetTable<tbl_Customer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Disk> tbl_Disks
		{
			get
			{
				return this.GetTable<tbl_Disk>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DiskRental> tbl_DiskRentals
		{
			get
			{
				return this.GetTable<tbl_DiskRental>();
			}
		}
		
		public System.Data.Linq.Table<tbl_LateCharge> tbl_LateCharges
		{
			get
			{
				return this.GetTable<tbl_LateCharge>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Rental> tbl_Rentals
		{
			get
			{
				return this.GetTable<tbl_Rental>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Reservation> tbl_Reservations
		{
			get
			{
				return this.GetTable<tbl_Reservation>();
			}
		}
		
		public System.Data.Linq.Table<tbl_ReservationTitle> tbl_ReservationTitles
		{
			get
			{
				return this.GetTable<tbl_ReservationTitle>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Return> tbl_Returns
		{
			get
			{
				return this.GetTable<tbl_Return>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Title> tbl_Titles
		{
			get
			{
				return this.GetTable<tbl_Title>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Customer")]
	public partial class tbl_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _CustomerName;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private EntitySet<tbl_LateCharge> _tbl_LateCharges;
		
		private EntitySet<tbl_Rental> _tbl_Rentals;
		
		private EntitySet<tbl_Reservation> _tbl_Reservations;
		
		private EntitySet<tbl_Return> _tbl_Returns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public tbl_Customer()
		{
			this._tbl_LateCharges = new EntitySet<tbl_LateCharge>(new Action<tbl_LateCharge>(this.attach_tbl_LateCharges), new Action<tbl_LateCharge>(this.detach_tbl_LateCharges));
			this._tbl_Rentals = new EntitySet<tbl_Rental>(new Action<tbl_Rental>(this.attach_tbl_Rentals), new Action<tbl_Rental>(this.detach_tbl_Rentals));
			this._tbl_Reservations = new EntitySet<tbl_Reservation>(new Action<tbl_Reservation>(this.attach_tbl_Reservations), new Action<tbl_Reservation>(this.detach_tbl_Reservations));
			this._tbl_Returns = new EntitySet<tbl_Return>(new Action<tbl_Return>(this.attach_tbl_Returns), new Action<tbl_Return>(this.detach_tbl_Returns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_LateCharge", Storage="_tbl_LateCharges", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_LateCharge> tbl_LateCharges
		{
			get
			{
				return this._tbl_LateCharges;
			}
			set
			{
				this._tbl_LateCharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Rental", Storage="_tbl_Rentals", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_Rental> tbl_Rentals
		{
			get
			{
				return this._tbl_Rentals;
			}
			set
			{
				this._tbl_Rentals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Reservation", Storage="_tbl_Reservations", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_Reservation> tbl_Reservations
		{
			get
			{
				return this._tbl_Reservations;
			}
			set
			{
				this._tbl_Reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Return", Storage="_tbl_Returns", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<tbl_Return> tbl_Returns
		{
			get
			{
				return this._tbl_Returns;
			}
			set
			{
				this._tbl_Returns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_LateCharges(tbl_LateCharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_LateCharges(tbl_LateCharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
		
		private void attach_tbl_Rentals(tbl_Rental entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_Rentals(tbl_Rental entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
		
		private void attach_tbl_Reservations(tbl_Reservation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_Reservations(tbl_Reservation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
		
		private void attach_tbl_Returns(tbl_Return entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_Returns(tbl_Return entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_User")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public tbl_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Disk")]
	public partial class tbl_Disk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiskID;
		
		private System.Nullable<int> _TitleID;
		
		private string _DiskStatus;
		
		private string _DiskCode;
		
		private EntitySet<tbl_DiskRental> _tbl_DiskRentals;
		
		private EntitySet<tbl_LateCharge> _tbl_LateCharges;
		
		private EntitySet<tbl_Return> _tbl_Returns;
		
		private EntityRef<tbl_Title> _tbl_Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiskIDChanging(int value);
    partial void OnDiskIDChanged();
    partial void OnTitleIDChanging(System.Nullable<int> value);
    partial void OnTitleIDChanged();
    partial void OnDiskStatusChanging(string value);
    partial void OnDiskStatusChanged();
    partial void OnDiskCodeChanging(string value);
    partial void OnDiskCodeChanged();
    #endregion
		
		public tbl_Disk()
		{
			this._tbl_DiskRentals = new EntitySet<tbl_DiskRental>(new Action<tbl_DiskRental>(this.attach_tbl_DiskRentals), new Action<tbl_DiskRental>(this.detach_tbl_DiskRentals));
			this._tbl_LateCharges = new EntitySet<tbl_LateCharge>(new Action<tbl_LateCharge>(this.attach_tbl_LateCharges), new Action<tbl_LateCharge>(this.detach_tbl_LateCharges));
			this._tbl_Returns = new EntitySet<tbl_Return>(new Action<tbl_Return>(this.attach_tbl_Returns), new Action<tbl_Return>(this.detach_tbl_Returns));
			this._tbl_Title = default(EntityRef<tbl_Title>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiskID
		{
			get
			{
				return this._DiskID;
			}
			set
			{
				if ((this._DiskID != value))
				{
					this.OnDiskIDChanging(value);
					this.SendPropertyChanging();
					this._DiskID = value;
					this.SendPropertyChanged("DiskID");
					this.OnDiskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="Int")]
		public System.Nullable<int> TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					if (this._tbl_Title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiskStatus", DbType="NVarChar(50)")]
		public string DiskStatus
		{
			get
			{
				return this._DiskStatus;
			}
			set
			{
				if ((this._DiskStatus != value))
				{
					this.OnDiskStatusChanging(value);
					this.SendPropertyChanging();
					this._DiskStatus = value;
					this.SendPropertyChanged("DiskStatus");
					this.OnDiskStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiskCode", DbType="VarChar(50)")]
		public string DiskCode
		{
			get
			{
				return this._DiskCode;
			}
			set
			{
				if ((this._DiskCode != value))
				{
					this.OnDiskCodeChanging(value);
					this.SendPropertyChanging();
					this._DiskCode = value;
					this.SendPropertyChanged("DiskCode");
					this.OnDiskCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Disk_tbl_DiskRental", Storage="_tbl_DiskRentals", ThisKey="DiskID", OtherKey="DiskID")]
		public EntitySet<tbl_DiskRental> tbl_DiskRentals
		{
			get
			{
				return this._tbl_DiskRentals;
			}
			set
			{
				this._tbl_DiskRentals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Disk_tbl_LateCharge", Storage="_tbl_LateCharges", ThisKey="DiskID", OtherKey="DiskID")]
		public EntitySet<tbl_LateCharge> tbl_LateCharges
		{
			get
			{
				return this._tbl_LateCharges;
			}
			set
			{
				this._tbl_LateCharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Disk_tbl_Return", Storage="_tbl_Returns", ThisKey="DiskID", OtherKey="DiskID")]
		public EntitySet<tbl_Return> tbl_Returns
		{
			get
			{
				return this._tbl_Returns;
			}
			set
			{
				this._tbl_Returns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Title_tbl_Disk", Storage="_tbl_Title", ThisKey="TitleID", OtherKey="TitleID", IsForeignKey=true)]
		public tbl_Title tbl_Title
		{
			get
			{
				return this._tbl_Title.Entity;
			}
			set
			{
				tbl_Title previousValue = this._tbl_Title.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Title.Entity = null;
						previousValue.tbl_Disks.Remove(this);
					}
					this._tbl_Title.Entity = value;
					if ((value != null))
					{
						value.tbl_Disks.Add(this);
						this._TitleID = value.TitleID;
					}
					else
					{
						this._TitleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Title");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DiskRentals(tbl_DiskRental entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Disk = this;
		}
		
		private void detach_tbl_DiskRentals(tbl_DiskRental entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Disk = null;
		}
		
		private void attach_tbl_LateCharges(tbl_LateCharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Disk = this;
		}
		
		private void detach_tbl_LateCharges(tbl_LateCharge entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Disk = null;
		}
		
		private void attach_tbl_Returns(tbl_Return entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Disk = this;
		}
		
		private void detach_tbl_Returns(tbl_Return entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Disk = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DiskRental")]
	public partial class tbl_DiskRental : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RentalID;
		
		private int _DiskID;
		
		private EntityRef<tbl_Disk> _tbl_Disk;
		
		private EntityRef<tbl_Rental> _tbl_Rental;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRentalIDChanging(int value);
    partial void OnRentalIDChanged();
    partial void OnDiskIDChanging(int value);
    partial void OnDiskIDChanged();
    #endregion
		
		public tbl_DiskRental()
		{
			this._tbl_Disk = default(EntityRef<tbl_Disk>);
			this._tbl_Rental = default(EntityRef<tbl_Rental>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RentalID
		{
			get
			{
				return this._RentalID;
			}
			set
			{
				if ((this._RentalID != value))
				{
					if (this._tbl_Rental.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRentalIDChanging(value);
					this.SendPropertyChanging();
					this._RentalID = value;
					this.SendPropertyChanged("RentalID");
					this.OnRentalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiskID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiskID
		{
			get
			{
				return this._DiskID;
			}
			set
			{
				if ((this._DiskID != value))
				{
					if (this._tbl_Disk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiskIDChanging(value);
					this.SendPropertyChanging();
					this._DiskID = value;
					this.SendPropertyChanged("DiskID");
					this.OnDiskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Disk_tbl_DiskRental", Storage="_tbl_Disk", ThisKey="DiskID", OtherKey="DiskID", IsForeignKey=true)]
		public tbl_Disk tbl_Disk
		{
			get
			{
				return this._tbl_Disk.Entity;
			}
			set
			{
				tbl_Disk previousValue = this._tbl_Disk.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Disk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Disk.Entity = null;
						previousValue.tbl_DiskRentals.Remove(this);
					}
					this._tbl_Disk.Entity = value;
					if ((value != null))
					{
						value.tbl_DiskRentals.Add(this);
						this._DiskID = value.DiskID;
					}
					else
					{
						this._DiskID = default(int);
					}
					this.SendPropertyChanged("tbl_Disk");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Rental_tbl_DiskRental", Storage="_tbl_Rental", ThisKey="RentalID", OtherKey="RentalID", IsForeignKey=true)]
		public tbl_Rental tbl_Rental
		{
			get
			{
				return this._tbl_Rental.Entity;
			}
			set
			{
				tbl_Rental previousValue = this._tbl_Rental.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Rental.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Rental.Entity = null;
						previousValue.tbl_DiskRentals.Remove(this);
					}
					this._tbl_Rental.Entity = value;
					if ((value != null))
					{
						value.tbl_DiskRentals.Add(this);
						this._RentalID = value.RentalID;
					}
					else
					{
						this._RentalID = default(int);
					}
					this.SendPropertyChanged("tbl_Rental");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_LateCharge")]
	public partial class tbl_LateCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LateChargeID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _DiskID;
		
		private System.Nullable<decimal> _LateCharge;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
		private EntityRef<tbl_Disk> _tbl_Disk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLateChargeIDChanging(int value);
    partial void OnLateChargeIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnDiskIDChanging(System.Nullable<int> value);
    partial void OnDiskIDChanged();
    partial void OnLateChargeChanging(System.Nullable<decimal> value);
    partial void OnLateChargeChanged();
    #endregion
		
		public tbl_LateCharge()
		{
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			this._tbl_Disk = default(EntityRef<tbl_Disk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateChargeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LateChargeID
		{
			get
			{
				return this._LateChargeID;
			}
			set
			{
				if ((this._LateChargeID != value))
				{
					this.OnLateChargeIDChanging(value);
					this.SendPropertyChanging();
					this._LateChargeID = value;
					this.SendPropertyChanged("LateChargeID");
					this.OnLateChargeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiskID", DbType="Int")]
		public System.Nullable<int> DiskID
		{
			get
			{
				return this._DiskID;
			}
			set
			{
				if ((this._DiskID != value))
				{
					if (this._tbl_Disk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiskIDChanging(value);
					this.SendPropertyChanging();
					this._DiskID = value;
					this.SendPropertyChanged("DiskID");
					this.OnDiskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCharge", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LateCharge
		{
			get
			{
				return this._LateCharge;
			}
			set
			{
				if ((this._LateCharge != value))
				{
					this.OnLateChargeChanging(value);
					this.SendPropertyChanging();
					this._LateCharge = value;
					this.SendPropertyChanged("LateCharge");
					this.OnLateChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_LateCharge", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_LateCharges.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_LateCharges.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Disk_tbl_LateCharge", Storage="_tbl_Disk", ThisKey="DiskID", OtherKey="DiskID", IsForeignKey=true)]
		public tbl_Disk tbl_Disk
		{
			get
			{
				return this._tbl_Disk.Entity;
			}
			set
			{
				tbl_Disk previousValue = this._tbl_Disk.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Disk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Disk.Entity = null;
						previousValue.tbl_LateCharges.Remove(this);
					}
					this._tbl_Disk.Entity = value;
					if ((value != null))
					{
						value.tbl_LateCharges.Add(this);
						this._DiskID = value.DiskID;
					}
					else
					{
						this._DiskID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Disk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Rental")]
	public partial class tbl_Rental : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RentalID;
		
		private System.Nullable<System.DateTime> _RentalDate;
		
		private System.Nullable<int> _CustomerID;
		
		private EntitySet<tbl_DiskRental> _tbl_DiskRentals;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRentalIDChanging(int value);
    partial void OnRentalIDChanged();
    partial void OnRentalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRentalDateChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public tbl_Rental()
		{
			this._tbl_DiskRentals = new EntitySet<tbl_DiskRental>(new Action<tbl_DiskRental>(this.attach_tbl_DiskRentals), new Action<tbl_DiskRental>(this.detach_tbl_DiskRentals));
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RentalID
		{
			get
			{
				return this._RentalID;
			}
			set
			{
				if ((this._RentalID != value))
				{
					this.OnRentalIDChanging(value);
					this.SendPropertyChanging();
					this._RentalID = value;
					this.SendPropertyChanged("RentalID");
					this.OnRentalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalDate", DbType="Date")]
		public System.Nullable<System.DateTime> RentalDate
		{
			get
			{
				return this._RentalDate;
			}
			set
			{
				if ((this._RentalDate != value))
				{
					this.OnRentalDateChanging(value);
					this.SendPropertyChanging();
					this._RentalDate = value;
					this.SendPropertyChanged("RentalDate");
					this.OnRentalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Rental_tbl_DiskRental", Storage="_tbl_DiskRentals", ThisKey="RentalID", OtherKey="RentalID")]
		public EntitySet<tbl_DiskRental> tbl_DiskRentals
		{
			get
			{
				return this._tbl_DiskRentals;
			}
			set
			{
				this._tbl_DiskRentals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Rental", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_Rentals.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_Rentals.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DiskRentals(tbl_DiskRental entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Rental = this;
		}
		
		private void detach_tbl_DiskRentals(tbl_DiskRental entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Rental = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Reservation")]
	public partial class tbl_Reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReservationID;
		
		private System.Nullable<int> _CustomerID;
		
		private EntitySet<tbl_ReservationTitle> _tbl_ReservationTitles;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationIDChanging(int value);
    partial void OnReservationIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public tbl_Reservation()
		{
			this._tbl_ReservationTitles = new EntitySet<tbl_ReservationTitle>(new Action<tbl_ReservationTitle>(this.attach_tbl_ReservationTitles), new Action<tbl_ReservationTitle>(this.detach_tbl_ReservationTitles));
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReservationID
		{
			get
			{
				return this._ReservationID;
			}
			set
			{
				if ((this._ReservationID != value))
				{
					this.OnReservationIDChanging(value);
					this.SendPropertyChanging();
					this._ReservationID = value;
					this.SendPropertyChanged("ReservationID");
					this.OnReservationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Reservation_tbl_ReservationTitle", Storage="_tbl_ReservationTitles", ThisKey="ReservationID", OtherKey="ReservationID")]
		public EntitySet<tbl_ReservationTitle> tbl_ReservationTitles
		{
			get
			{
				return this._tbl_ReservationTitles;
			}
			set
			{
				this._tbl_ReservationTitles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Reservation", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_Reservations.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_Reservations.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_ReservationTitles(tbl_ReservationTitle entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Reservation = this;
		}
		
		private void detach_tbl_ReservationTitles(tbl_ReservationTitle entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Reservation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ReservationTitle")]
	public partial class tbl_ReservationTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReservationID;
		
		private int _TitleID;
		
		private EntityRef<tbl_Reservation> _tbl_Reservation;
		
		private EntityRef<tbl_Title> _tbl_Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReservationIDChanging(int value);
    partial void OnReservationIDChanged();
    partial void OnTitleIDChanging(int value);
    partial void OnTitleIDChanged();
    #endregion
		
		public tbl_ReservationTitle()
		{
			this._tbl_Reservation = default(EntityRef<tbl_Reservation>);
			this._tbl_Title = default(EntityRef<tbl_Title>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReservationID
		{
			get
			{
				return this._ReservationID;
			}
			set
			{
				if ((this._ReservationID != value))
				{
					if (this._tbl_Reservation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReservationIDChanging(value);
					this.SendPropertyChanging();
					this._ReservationID = value;
					this.SendPropertyChanged("ReservationID");
					this.OnReservationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					if (this._tbl_Title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Reservation_tbl_ReservationTitle", Storage="_tbl_Reservation", ThisKey="ReservationID", OtherKey="ReservationID", IsForeignKey=true)]
		public tbl_Reservation tbl_Reservation
		{
			get
			{
				return this._tbl_Reservation.Entity;
			}
			set
			{
				tbl_Reservation previousValue = this._tbl_Reservation.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Reservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Reservation.Entity = null;
						previousValue.tbl_ReservationTitles.Remove(this);
					}
					this._tbl_Reservation.Entity = value;
					if ((value != null))
					{
						value.tbl_ReservationTitles.Add(this);
						this._ReservationID = value.ReservationID;
					}
					else
					{
						this._ReservationID = default(int);
					}
					this.SendPropertyChanged("tbl_Reservation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Title_tbl_ReservationTitle", Storage="_tbl_Title", ThisKey="TitleID", OtherKey="TitleID", IsForeignKey=true)]
		public tbl_Title tbl_Title
		{
			get
			{
				return this._tbl_Title.Entity;
			}
			set
			{
				tbl_Title previousValue = this._tbl_Title.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Title.Entity = null;
						previousValue.tbl_ReservationTitles.Remove(this);
					}
					this._tbl_Title.Entity = value;
					if ((value != null))
					{
						value.tbl_ReservationTitles.Add(this);
						this._TitleID = value.TitleID;
					}
					else
					{
						this._TitleID = default(int);
					}
					this.SendPropertyChanged("tbl_Title");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Return")]
	public partial class tbl_Return : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private int _DiskID;
		
		private System.Nullable<System.DateTime> _ReturnDate;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
		private EntityRef<tbl_Disk> _tbl_Disk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnDiskIDChanging(int value);
    partial void OnDiskIDChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    #endregion
		
		public tbl_Return()
		{
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			this._tbl_Disk = default(EntityRef<tbl_Disk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiskID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DiskID
		{
			get
			{
				return this._DiskID;
			}
			set
			{
				if ((this._DiskID != value))
				{
					if (this._tbl_Disk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiskIDChanging(value);
					this.SendPropertyChanging();
					this._DiskID = value;
					this.SendPropertyChanged("DiskID");
					this.OnDiskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this.OnReturnDateChanging(value);
					this.SendPropertyChanging();
					this._ReturnDate = value;
					this.SendPropertyChanged("ReturnDate");
					this.OnReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Return", Storage="_tbl_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_Returns.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_Returns.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Disk_tbl_Return", Storage="_tbl_Disk", ThisKey="DiskID", OtherKey="DiskID", IsForeignKey=true)]
		public tbl_Disk tbl_Disk
		{
			get
			{
				return this._tbl_Disk.Entity;
			}
			set
			{
				tbl_Disk previousValue = this._tbl_Disk.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Disk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Disk.Entity = null;
						previousValue.tbl_Returns.Remove(this);
					}
					this._tbl_Disk.Entity = value;
					if ((value != null))
					{
						value.tbl_Returns.Add(this);
						this._DiskID = value.DiskID;
					}
					else
					{
						this._DiskID = default(int);
					}
					this.SendPropertyChanged("tbl_Disk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Title")]
	public partial class tbl_Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TitleID;
		
		private string _TitleName;
		
		private System.Nullable<int> _RentalPeriod;
		
		private System.Nullable<decimal> _RentalCharge;
		
		private string _TitleStatus;
		
		private System.Nullable<int> _Quantity;
		
		private EntitySet<tbl_Disk> _tbl_Disks;
		
		private EntitySet<tbl_ReservationTitle> _tbl_ReservationTitles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTitleIDChanging(int value);
    partial void OnTitleIDChanged();
    partial void OnTitleNameChanging(string value);
    partial void OnTitleNameChanged();
    partial void OnRentalPeriodChanging(System.Nullable<int> value);
    partial void OnRentalPeriodChanged();
    partial void OnRentalChargeChanging(System.Nullable<decimal> value);
    partial void OnRentalChargeChanged();
    partial void OnTitleStatusChanging(string value);
    partial void OnTitleStatusChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public tbl_Title()
		{
			this._tbl_Disks = new EntitySet<tbl_Disk>(new Action<tbl_Disk>(this.attach_tbl_Disks), new Action<tbl_Disk>(this.detach_tbl_Disks));
			this._tbl_ReservationTitles = new EntitySet<tbl_ReservationTitle>(new Action<tbl_ReservationTitle>(this.attach_tbl_ReservationTitles), new Action<tbl_ReservationTitle>(this.detach_tbl_ReservationTitles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(50)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this.OnTitleNameChanging(value);
					this.SendPropertyChanging();
					this._TitleName = value;
					this.SendPropertyChanged("TitleName");
					this.OnTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalPeriod", DbType="Int")]
		public System.Nullable<int> RentalPeriod
		{
			get
			{
				return this._RentalPeriod;
			}
			set
			{
				if ((this._RentalPeriod != value))
				{
					this.OnRentalPeriodChanging(value);
					this.SendPropertyChanging();
					this._RentalPeriod = value;
					this.SendPropertyChanged("RentalPeriod");
					this.OnRentalPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalCharge", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RentalCharge
		{
			get
			{
				return this._RentalCharge;
			}
			set
			{
				if ((this._RentalCharge != value))
				{
					this.OnRentalChargeChanging(value);
					this.SendPropertyChanging();
					this._RentalCharge = value;
					this.SendPropertyChanged("RentalCharge");
					this.OnRentalChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleStatus", DbType="NVarChar(50)")]
		public string TitleStatus
		{
			get
			{
				return this._TitleStatus;
			}
			set
			{
				if ((this._TitleStatus != value))
				{
					this.OnTitleStatusChanging(value);
					this.SendPropertyChanging();
					this._TitleStatus = value;
					this.SendPropertyChanged("TitleStatus");
					this.OnTitleStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Title_tbl_Disk", Storage="_tbl_Disks", ThisKey="TitleID", OtherKey="TitleID")]
		public EntitySet<tbl_Disk> tbl_Disks
		{
			get
			{
				return this._tbl_Disks;
			}
			set
			{
				this._tbl_Disks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Title_tbl_ReservationTitle", Storage="_tbl_ReservationTitles", ThisKey="TitleID", OtherKey="TitleID")]
		public EntitySet<tbl_ReservationTitle> tbl_ReservationTitles
		{
			get
			{
				return this._tbl_ReservationTitles;
			}
			set
			{
				this._tbl_ReservationTitles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Disks(tbl_Disk entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Title = this;
		}
		
		private void detach_tbl_Disks(tbl_Disk entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Title = null;
		}
		
		private void attach_tbl_ReservationTitles(tbl_ReservationTitle entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Title = this;
		}
		
		private void detach_tbl_ReservationTitles(tbl_ReservationTitle entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Title = null;
		}
	}
}
#pragma warning restore 1591
